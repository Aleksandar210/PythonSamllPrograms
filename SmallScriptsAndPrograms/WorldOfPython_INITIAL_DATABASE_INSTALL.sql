GO
CREATE DATABASE WorldOfPython;

GO
USE WorldOfPython;

GO
--First we create classes and races tables 
CREATE TABLE HERO_CLASSES(
HERO_CLASS nvarchar(60) PRIMARY KEY
)

--TEST_1
--Inserting test data for hero classes
INSERT INTO HERO_CLASSES(HERO_CLASS) VALUES ('Coder'), ('DevOpser'), ('Tester')

CREATE TABLE HERO_RACES(
HERO_RACE nvarchar(60) PRIMARY KEY,
HERO_RACE_START_HP smallint,
HERO_RACE_START_MANA smallint,
HERO_RACE_MAX_HP  smallint,
HERO_RACE_MAX_MANA smallint,
)

--TEST_2
--Inserting test data for hero races
INSERT INTO HERO_RACES(HERO_RACE, HERO_RACE_START_HP, HERO_RACE_START_MANA, HERO_RACE_MAX_HP, HERO_RACE_MAX_MANA)
	VALUES
		('Human', 50, 60, 2500, 1000),
		('Android', 90, 40, 3000, 2100),
		('Exception', 70,70, 1000, 800)
		
		


GO
CREATE TABLE Heros(
	HERO_ID int IDENTITY PRIMARY KEY,
	HERO_NAME nvarchar(60),
	HERO_CLASS nvarchar(60),
	HERO_RACE nvarchar(60),
	HERO_HP smallint,
	HERO_MANA smallint,
	HERO_LEVEL tinyint,
	CONSTRAINT FK_HERO_CLASS FOREIGN KEY(HERO_CLASS) REFERENCES HERO_CLASSES(HERO_CLASS),
	CONSTRAINT FK_HERO_RACES FOREIGN KEY (HERO_RACE) REFERENCES HERO_RACES(HERO_RACE)
)

CREATE TABLE ABILITIES(
ABILITY_ID int IDENTITY PRIMARY KEY,
ABILITY_NAME nvarchar(60),
ABILITY_DAMAGE smallint,
ABILITY_MANA_COST smallint,
)

GO 
CREATE TABLE HERO_ABILITIES(
HERO_ID int,
ABILITY_ID int,
CONSTRAINT FK_HERO_HEROES FOREIGN KEY (HERO_ID) REFERENCES HEROS (HERO_ID),
CONSTRAINT FK_ABILITY_ABILITIES FOREIGN KEY (ABILITY_ID) REFERENCES ABILITIES (ABILITY_ID)
)

GO
CREATE TABLE INVENTORY_TYPES(
INVENTORY_TYPE_ID int IDENTITY PRIMARY KEY,
INVENTORY_TYPE_NAME nvarchar(60),
INVENTORY_TYPE_CAPACITY smallint
)

GO
CREATE TABLE INVENTORIES(
INVENTORY_ID int IDENTITY PRIMARY KEY,
INVENTROY_CAPACITY tinyint,
INVENTROY_MONEY_CAPACITY decimal(19,4),
INVENTORY_TYPE int,
CONSTRAINT fk_inventory_type FOREIGN KEY(INVENTORY_TYPE) REFERENCES INVENTORY_TYPES(INVENTORY_TYPE_ID)
)

GO
CREATE TABLE HEROS_INVENTORY(
HERO_ID int,
INVENTORY_ID int,
CONSTRAINT fk_inventory_hero FOREIGN KEY (HERO_ID) REFERENCES HEROS (HERO_ID),
CONSTRAINT fk_inventory_inventories FOREIGN KEY (INVENTORY_ID) REFERENCES INVENTORIES (INVENTORY_ID)
)

--we create a table for current levels to be beated
CREATE TABLE LEVELS(
LEVEL_ID int IDENTITY PRIMARY KEY,
LEVEL_NAME nvarchar(60),
LEVEL_REWARD decimal(19,4)
)

GO
CREATE TABLE MONSTERS(
MONSTER_ID int IDENTITY PRIMARY KEY,
MONSTER_NAME nvarchar(60),
MONSTER_HP smallint,
MONSTER_DAMAGE smallint,
MONSTER_REWARD decimal(19,4)
)

GO
CREATE TABLE MONSTER_LEVELS(
LEVEL_ID int,
MONSTER_ID int
)


--we create the trigger before the test data is inserted
GO

CREATE OR ALTER TRIGGER trgHeroInserted
ON Heros
INSTEAD OF INSERT
AS
BEGIN
	--Declaring variables to hold current inserted race
	DECLARE @CurrentRaceInserted VARCHAR(60);
	SET @CurrentRaceInserted = (SELECT INSERTED.HERO_RACE FROM INSERTED);

	--get max hp and 
	DECLARE @StartRaceHP smallint;
	DECLARE @StartRaceMana smallint;

	SET @StartRaceHP = (SELECT HERO_RACE_START_HP FROM HERO_RACES WHERE HERO_RACE = @CurrentRaceInserted);
	SET @StartRaceMana = (SELECT HERO_RACE_START_MANA FROM HERO_RACES WHERE HERO_RACE = @CurrentRaceInserted);

	--Execute the insert statement
	INSERT INTO Heros(HERO_NAME,HERO_CLASS,HERO_RACE,HERO_HP,HERO_MANA,HERO_LEVEL)
		(SELECT INSERTED.HERO_NAME, INSERTED.HERO_CLASS, INSERTED.HERO_RACE, @StartRaceHP, @StartRaceMana,1 FROM INSERTED);

	PRINT 'TRIGGER trgHeroInserted was fired';
END;

